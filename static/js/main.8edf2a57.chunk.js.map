{"version":3,"sources":["BlogList.js","useFetch.js","Home.js","Navbar.js","Create.js","BlogDetails.js","NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["BlogList","blogs","title","className","map","blog","to","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Navbar","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","htmlFor","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8edf2a57.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\n\nconst BlogList = ({ blogs, title }) => {\n  return (\n    <div className=\"blog-list\">\n      <h2>{title}</h2>\n      {blogs.map(blog => (\n        <div className=\"blog-preview\" key={blog.id}>\n          <Link to={`/blogs/${blog.id}`}>\n            <h2>{blog.title}</h2>\n            <p>Written by {blog.author}</p>\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default BlogList;\n","import { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n\n    setTimeout(() => {\n      fetch(url, { signal: abortCont.signal })\n        .then(res => {\n          if (!res.ok) {\n            throw Error(\"Could not fetch the data for that resource\");\n          }\n          return res.json();\n        })\n        .then(data => {\n          setData(data);\n          setIsPending(false);\n          setError(null);\n        })\n        .catch(err => {\n          if (err.name === \"AbortError\") {\n            console.log(\"fetcheeed\");\n          } else {\n            setIsPending(false);\n            setError(err.message);\n          }\n        });\n    }, 200);\n\n    return () => abortCont.abort();\n  }, [url]);\n\n  return { data, isPending, error };\n};\n\nexport default useFetch;\n","import BlogList from \"./BlogList\";\nimport useFetch from \"./useFetch\";\n\nconst Home = () => {\n  // let name = \"Mario\";\n  const { data: blogs, isPending, error } = useFetch(\"http://localhost:8000/blogs\");\n\n  return (\n    <div className=\"home\">\n      {error && <div>{error}</div>}\n      {isPending && <div>Loading..</div>}\n      {blogs && <BlogList blogs={blogs} title={\"All Blogs!\"} />}\n    </div>\n  );\n};\n\nexport default Home;\n","import { Link } from \"react-router-dom\";\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar\">\n      <h1>Dojo Blog</h1>\n      <div className=\"links\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/create\">New Blog</Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Create = () => {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [author, setAuthor] = useState(\"mario\");\n  const [isPending, setIsPending] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const blog = { title, body, author };\n    setIsPending(true);\n    fetch(\"http://localhost:8000/blogs\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(blog)\n    }).then(() => {\n      setIsPending(false);\n      history.push(\"/\");\n    });\n  };\n  return (\n    <div className=\"create\">\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"\">Blog title:</label>\n        <input type=\"text\" required value={title} onChange={e => setTitle(e.target.value)} />\n        <label>Blog body:</label>\n        <textarea required value={body} onChange={e => setBody(e.target.value)}></textarea>\n        <label>Blog author:</label>\n        <select value={author} onChange={e => setAuthor(e.target.value)}>\n          <option value=\"mario\">mario</option>\n          <option value=\"yoshi\">yoshi</option>\n        </select>\n        {!isPending && <button>Add Blog</button>}\n        {isPending && <button disabled>Adding Blog...</button>}\n      </form>\n    </div>\n  );\n};\n\nexport default Create;\n","import { useHistory, useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\n\nconst BlogDetails = () => {\n  const { id } = useParams();\n  const { data: blog, error, isPending } = useFetch(\"http://localhost:8000/blogs/\" + id);\n  const history = useHistory();\n  const handleClick = () => {\n    fetch(\"http://localhost:8000/blogs/\" + blog.id, {\n      method: \"DELETE\"\n    }).then(() => {\n      history.push(\"/\");\n    });\n  };\n  return (\n    <div className=\"blog-details\">\n      {isPending && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n      {blog && (\n        <article>\n          <h2>{blog.title}</h2>\n          <p>Written by{blog.author}</p>\n          <div>{blog.body}</div>\n          <button onClick={handleClick}>delete</button>\n        </article>\n      )}\n    </div>\n  );\n};\n\nexport default BlogDetails;\n","import { Link } from \"react-router-dom\";\n\nconst NotFound = () => {\n  return (\n    <div className=\"not-found\">\n      <h2>Sorry</h2>\n      <p>That page cannot be found</p>\n      <Link to=\"/\">Back to the homepage</Link>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import Home from \"./Home\";\nimport Navbar from \"./Navbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Create from \"./Create\";\nimport BlogDetails from \"./BlogDetails\";\nimport NotFound from \"./NotFound\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n            <Route path=\"/blogs/:id\">\n              <BlogDetails />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}